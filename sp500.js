const api = require('zacks-api');

let sp500 = [
"MSFT",
"AAPL",
"AMZN",
"FB",
"JNJ",
"GOOG",
"GOOGL",
"BRK.B",
"PG",
"V",
"JPM",
"UNH",
"INTC",
"VZ",
"MA",
"HD",
"T",
"MRK",
"PFE",
"WMT",
"PEP",
"NFLX",
"DIS",
"XOM",
"CSCO",
"BAC",
"KO",
"NVDA",
"ABT",
"ADBE",
"CMCSA",
"CVX",
"BMY",
"MCD",
"CRM",
"COST",
"AMGN",
"PYPL",
"TMO",
"LLY",
"MDT",
"NEE",
"ABBV",
"PM",
"ORCL",
"AMT",
"NKE",
"ACN",
"IBM",
"TXN",
"WFC",
"AVGO",
"GILD",
"DHR",
"UNP",
"LIN",
"HON",
"LMT",
"RTX",
"C",
"SBUX",
"QCOM",
"MMM",
"CVS",
"CHTR",
"FIS",
"MDLZ",
"LOW",
"BA",
"BDX",
"MO",
"VRTX",
"UPS",
"INTU",
"CI",
"CCI",
"SPGI",
"ANTM",
"AMD",
"D",
"PLD",
"CME",
"DUK",
"CAT",
"CL",
"AGN",
"ADP",
"SO",
"ZTS",
"ISRG",
"SYK",
"EQIX",
"BLK",
"BKNG",
"NOW",
"TJX",
"GE",
"GS",
"AXP",
"FISV",
"TGT",
"BIIB",
"NOC",
"ATVI",
"NEM",
"ICE",
"BSX",
"KMB",
"HUM",
"MU",
"PGR",
"CB",
"AMAT",
"MMC",
"CSX",
"APD",
"USB",
"BAX",
"ILMN",
"TFC",
"DG",
"ITW",
"EW",
"REGN",
"GPN",
"MS",
"ECL",
"PNC",
"DE",
"AON",
"LHX",
"AEP",
"SCHW",
"SHW",
"NSC",
"CNC",
"LRCX",
"DLR",
"MCO",
"WM",
"ADSK",
"COP",
"ADI",
"EL",
"GIS",
"EXC",
"SRE",
"SBAC",
"XEL",
"TMUS",
"EA",
"ALL",
"ROP",
"WBA",
"ETN",
"EMR",
"GD",
"ROST",
"WEC",
"BK",
"DD",
"EBAY",
"PSA",
"CTSH",
"ES",
"KMI",
"FDX",
"ED",
"ORLY",
"HCA",
"MSCI",
"GM",
"TRV",
"YUM",
"SYY",
"AFL",
"MSI",
"STZ",
"PSX",
"KR",
"PEG",
"INFO",
"EOG",
"KLAC",
"MET",
"VRSK",
"APH",
"CLX",
"COF",
"FE",
"AZO",
"WLTW",
"DOW",
"TROW",
"A",
"AWK",
"ALXN",
"MNST",
"IDXX",
"RMD",
"EQR",
"XLNX",
"PCAR",
"IQV",
"ANSS",
"TEL",
"ZBH",
"CMG",
"SNPS",
"CDNS",
"VRSN",
"AVB",
"CERN",
"CMI",
"TWTR",
"HPQ",
"MCK",
"BLL",
"MAR",
"PRU",
"JCI",
"HSY",
"SLB",
"WMB",
"PAYX",
"PPG",
"EIX",
"STT",
"VLO",
"HLT",
"FAST",
"ETR",
"ADM",
"DTE",
"TT",
"PPL",
"AIG",
"ROK",
"OTIS",
"MCHP",
"MKC",
"AEE",
"CTVA",
"F",
"ARE",
"FLT", 
"DLTR",
"WELL",
"INCY",
"KEYS",
"KHC",
"VFC",
"TSN",
"CTXS",
"CHD",
"O",
"AME",
"MTD",
"FTV",
"CMS",
"PH",
"AKAM",
"CAG",
"FRC",
"RSG",
"CTAS",
"SWK",
"NTRS",
"SPG",
"K",
"MPC",
"ESS",
"MKTX",
"EFX",
"SWKS",
"BBY",
"APTV",
"TFX",
"GLW",
"TDG",
"LH",
"FTNT",
"CDW",
"COO",
"CAH",
"AJG",
"MXIM",
"TTWO",
"LUV",
"WY",
"CPRT",
"LVS",
"VMC",
"MTB",
"TIF",
"ALGN",
"EVRG",
"AMCR",
"HRL",
"SJM",
"CBRE",
"PXD",
"AMP",
"IFF",
"DGX",
"DHI",
"BXP",
"ABC",
"DAL",
"LDOS",
"HIG",
"KSU",
"STE",
"DRE",
"DOV",
"BR",
"LYB",
"XYL",
"WAT",
"MAA",
"LNT",
"ODFL",
"ATO",
"PEAK",
"JKHY",
"CINF",
"GWW",
"EXPD",
"CARR",
"NDAQ",
"ULTA",
"EXR",
"IP",
"STX",
"FITB",
"HPE",
"WDC",
"OXY",
"LEN",
"ANET",
"HOLX",
"GRMN",
"TSCO",
"IEX",
"NLOK",
"OKE",
"MAS",
"CBOE",
"NUE",
"FCX",
"DFS",
"OMC",
"MLM",
"FMC",
"BF.B",
"KMX",
"J",
"ZBRA",
"UDR",
"PAYC",
"CXO",
"GPC",
"VTR",
"HES",
"KEY",
"QRVO",
"NVR",
"CHRW",
"VAR",
"NI",
"HAS",
"PKI",
"IT",
"CTL",
"WAB",
"IR",
"CE",
"NTAP",
"SYF",
"XRAY",
"AVY",
"RF",
"ETFC",
"PNW",
"FOXA",
"ALLE",
"SIVB",
"L",
"CPB",
"JBHT",
"CFG",
"EXPE",
"COG",
"BKR",
"AES",
"HBAN",
"DRI",
"LW",
"CNP",
"PKG",
"VIAC",
"WU",
"UHS",
"TAP",
"NRG",
"AAP",
"JNPR",
"HII",
"RJF",
"MYL",
"HSIC",
"HST",
"URI",
"PFG",
"ABMD",
"WRB",
"EMN",
"FFIV",
"GL",
"WRK",
"HAL",
"RE",
"IRM",
"MGM",
"PRGO",
"WYNN",
"DVA",
"ALB",
"AIZ",
"SNA",
"DISCK",
"WHR",
"LKQ",
"PHM",
"TXT",
"FBHS",
"CF",
"REG",
"VNO",
"LNC",
"RCL",
"DISH",
"UAL",
"FANG",
"AIV",
"IPG",
"AOS",
"FLIR",
"ROL",
"BWA",
"LYV",
"PNR",
"ZION",
"PBCT",
"RHI",
"PWR",
"FRT",
"NWL",
"CCL",
"BEN",
"NOV",
"MHK",
"SEE",
"CMA",
"HWM",
"NLSN",
"IPGP",
"HFC",
"AAL",
"FOX",
"DXC",
"MOS",
"DVN",
"TPR",
"SLG",
"MRO",
"LEG",
"APA",
"NBL",
"FTI",
"KIM",
"IVZ",
"ALK",
"RL",
"XRX",
"DISCA",
"NWSA",
"FLS",
"UNM",
"HBI",
"PVH",
"HOG",
"HRB",
"KSS",
"NCLH",
"LB",
"HP",
"UAA",
"JWN",
"CPRI",
"COTY",
"UA",
"GPS",
"ADS",
"NWS"]

let test = ["GPS", "ADS", "NWS"]


let strongBuy = [];


// let zacksSP500 = ["MKTX", "SJM", "AMCR", "FTV", "NEM", "CLX", "REGN"]
// let zacksRecommend = ["JAKK", "MR", "KGC", "GFI", "BBW"]
let zacks = ["MKTX", "SJM", "AMCR", "FTV", "NEM", "CLX", "REGN", "JAKK", "MR", "KGC", "GFI", "BBW"]

// test
// sp500 

result = zacks.forEach(e => {
	api.getData(e).then(res => {
		
		//console.log(res.ticker, res.zacksRank && res.zacksRank == 1)
		if(res.ticker, res.zacksRank && res.zacksRank == 1){
			strongBuy.push(res.ticker)
			console.log(res.ticker + " has passed")
		} else {
			console.log(res.ticker = " did NOT pass")
		}


	});

})

// TODO: need to handle that I'm getting async stuff
console.log("Strong Buy")
console.log("# of stocks ranked 1:  " + strongBuy.length)

strongBuy.forEach(tick => {
	console.log(tick)
})





// https://quote-feed.zacks.com/msft
// api.getData('TSLA').then(console.log);


// need ticker and zacksRank
//{
  //ticker: 'TSLA',
  //name: 'Tesla, Inc.',
  //zacksRankText: 'Hold',
  //zacksRank: '3',
  //updatedAt: '2020-04-23T23:00:00.000Z'
//}


